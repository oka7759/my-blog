.markdown pre {
  color: var(--prism-foreground);
  background-color: var(--prism-background);
}

.markdown {
  --tw-text-opacity: 1;
  color: rgb(64 64 64 / var(--tw-text-opacity));
}

.markdown h2,
.markdown h3,
.markdown h4,
.markdown strong,
.markdown thead th {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}

.markdown del {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.markdown p {
  line-height: 1.75rem;
}

.markdown img {
  margin: 0 auto;
}

.markdown img + span {
  display: block;
  margin-top: 0.5rem;
}

.markdown a {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}
.markdown a:hover {
  text-decoration-color: #b5b5b5;
}

.markdown a:has(strong) {
  text-decoration-color: #fde047;
  text-decoration-style: wavy;
  text-underline-offset: 1px;
}

.markdown a:has(strong):hover {
  text-decoration-color: #facc15;
}

.markdown code {
  font-family: var(--font-mono), Consolas, Monaco, "Andale Mono", monospace;
}

.markdown code:not(:where(pre *)) {
  --tw-text-opacity: 1;
  color: rgb(23 23 23 / var(--tw-text-opacity));
}
.markdown code:not(:where(pre *)) {
  border-radius: 0.5rem;
  padding: 0.125rem 0.5rem;
  --tw-content: none;
  content: var(--tw-content);
  --tw-bg-opacity: 1;
  background-color: rgb(229 229 229 / var(--tw-bg-opacity));
}

.markdown pre::-webkit-scrollbar {
  display: none;
}

.markdown pre {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

.markdown > :first-child {
  margin-top: 3rem !important;
}
.markdown .anchor {
  position: absolute;
  margin-left: -2.5rem;
  margin-top: 0.25rem;
  display: flex;
  height: 1.5rem;
  width: 1.5rem;
  align-items: center;
  justify-content: center;
  opacity: 0;
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
  border-radius: 0.375rem;
  border-style: none;
  text-decoration-line: none;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
  --tw-ring-color: rgba(64, 64, 64, 0.1);
}

.markdown .anchor:hover {
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-ring-color: rgba(64, 64, 64, 0.3);
}

.markdown .anchor:after {
  content: " ";
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E");
  mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' aria-hidden='true'%3E%3Cpath d='M3.75 1v10M8.25 1v10M1 3.75h10M1 8.25h10' stroke='currentColor' strokeWidth='1.5' strokeLinecap='round' /%3E%3C/svg%3E");
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  -webkit-mask-position: center;
  mask-position: center;
  height: 1rem;
  width: 1rem;
  --tw-bg-opacity: 1;
}

.markdown {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.markdown :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.markdown :where(a):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.markdown :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.markdown :where(a strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(blockquote strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(thead th strong):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(ol):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.markdown :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.markdown :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.markdown :where(ol[type="A s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-alpha;
}

.markdown :where(ol[type="a s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-alpha;
}

.markdown :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.markdown :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.markdown :where(ol[type="I s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: upper-roman;
}

.markdown :where(ol[type="i s"]):not(:where([class~="not-prose"] *)) {
  list-style-type: lower-roman;
}

.markdown :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  list-style-type: decimal;
}

.markdown :where(ul):not(:where([class~="not-prose"] *)) {
  list-style-type: disc;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1.625em;
}

.markdown :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.markdown :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets);
}

.markdown :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.markdown :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C" "\201D" "\2018" "\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.markdown :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.markdown :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.markdown :where(h2):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.markdown :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.markdown :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.markdown :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.markdown :where(h4):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}

.markdown :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.markdown :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.markdown :where(figcaption):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.markdown :where(code):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.markdown :where(a code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(h1 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(h2 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.markdown :where(h3 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.markdown :where(h4 code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(blockquote code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(thead th code):not(:where([class~="not-prose"] *)) {
  color: inherit;
}

.markdown :where(pre):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding: 0.8571429em 1.1428571em;
}

.markdown :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.markdown :where(pre code):not(:where([class~="not-prose"] *)):before {
  content: none;
}

.markdown :where(pre code):not(:where([class~="not-prose"] *)):after {
  content: none;
}

.markdown :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.markdown :where(thead):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.markdown :where(thead th):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.markdown :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.markdown :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}

.markdown :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: baseline;
}

.markdown :where(tfoot):not(:where([class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.markdown :where(tfoot td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
}

.markdown {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.markdown :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.markdown :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.markdown :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.markdown :where(ol > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.markdown :where(ul > li):not(:where([class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.markdown :where(.markdown > ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.markdown
  :where(.markdown > ul > li > :first-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.markdown
  :where(.markdown > ul > li > :last-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.markdown
  :where(.markdown > ol > li > :first-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.markdown
  :where(.markdown > ol > li > :last-child):not(
    :where([class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.markdown
  :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.markdown :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.markdown :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.markdown :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.markdown :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.markdown :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}

.markdown :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}

.markdown :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) {
  padding: 0.5714286em;
}

.markdown
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.markdown
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.markdown :where(.markdown > :first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}

.markdown :where(.markdown > :last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}

.markdown :where(h2, h3, h4):not(:where([class~="not-prose"] *)) {
  scroll-margin-top: var(--scroll-mt);
}

.markdown :where(hr, thead, tbody tr):not(:where([class~="not-prose"] *)) {
  border-color: #d4d4d4;
}

.markdown-neutral {
  --tw-prose-body: #404040;
  --tw-prose-headings: #171717;
  --tw-prose-lead: #525252;
  --tw-prose-links: #171717;
  --tw-prose-bold: #171717;
  --tw-prose-counters: #737373;
  --tw-prose-bullets: #d4d4d4;
  --tw-prose-hr: #e5e5e5;
  --tw-prose-quotes: #171717;
  --tw-prose-quote-borders: #e5e5e5;
  --tw-prose-captions: #737373;
  --tw-prose-code: #171717;
  --tw-prose-pre-code: #e5e5e5;
  --tw-prose-pre-bg: #262626;
  --tw-prose-th-borders: #d4d4d4;
  --tw-prose-td-borders: #e5e5e5;
  --tw-prose-invert-body: #d4d4d4;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #a3a3a3;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #a3a3a3;
  --tw-prose-invert-bullets: #525252;
  --tw-prose-invert-hr: #404040;
  --tw-prose-invert-quotes: #f5f5f5;
  --tw-prose-invert-quote-borders: #404040;
  --tw-prose-invert-captions: #a3a3a3;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d4d4d4;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #525252;
  --tw-prose-invert-td-borders: #404040;
}
